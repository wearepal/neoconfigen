name: CI

on:
  pull_request:
    branches:
    - main

jobs:

  lint_with_flake8:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
    - name: Install flake8
      run: |
        python -m pip install --upgrade pip
        pip install flake8
    - name: Lint with pylint
      run: |
        flake8 configen

  format_with_black_and_isort:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
    - name: Install black
      run: |
        python -m pip install --upgrade pip
        pip install black isort
    - name: Format with black
      run: |
        python -m black --check configen
    - name: Format with isort
      run: |
        isort . --check --diff

  check_yaml:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
    - name: Install pydocstyle
      run: |
        python -m pip install --upgrade pip
        pip install yamllint
    - name: Check docstrings with pydocstyle
      run: |
        yamllint .

  run_tests_and_type_checking:

    needs: [format_with_black_and_isort, lint_with_flake8, check_yaml]
    runs-on: ubuntu-latest
    env:
      POETRY_VIRTUALENVS_CREATE: false

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
    - name: Set up Poetry cache for Python dependencies
      uses: actions/cache@v2
      if: startsWith(runner.os, 'Linux')
      with:
        path: ~/.cache/pypoetry
        key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
        restore-keys: ${{ runner.os }}-poetry-
    - name: Install Poetry
      run: |
        curl -fsS -o get-poetry.py https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py
        python get-poetry.py -y
        echo "$HOME/.poetry/bin" >> $GITHUB_PATH
        rm get-poetry.py
    - name: Install dependencies
      run: poetry install --no-interaction
    - name: Install CI dependencies
      # TODO: do this with poetry extras
      run: pip install pytest omegaconf hydra-core
    - name: Test with pytest
      run: |
        poetry run python -m pytest -vv tests/

    - name: Setup node.js (for pyright)
      uses: actions/setup-node@v1
      with:
        node-version: "14"

    - name: Install pyright
      run: npm install -g pyright

    - name: Run type checking
      run: |
        poetry run pyright configen
